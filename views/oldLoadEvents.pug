doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    meta(http-equiv='X-UA-Compatible', content='ie=edge')
    link(rel='stylesheet', href='../css/search.css', v='')
    link(href='https://fonts.googleapis.com/css?family=Open+Sans|Quicksand', rel='stylesheet')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css')
    title Search

  body
    .container
      .title
        h1 Search Events
      .searchBox
        form(action='/events/getEvents', method='post')
          input(type='text', name='name')
          input(type='submit', value='Find')
      .displayEvents
        if events
            input#input(type='text', placeholder='SEARCH', onkeyup='addTag()')
            #filter
            .events
                ul
                    each event in events
                        div#eachEvent(class='filtered', name ='displayedEvents', tags=event.tags)
                        li #{event.address}
                        li #{event.name} 

      script.
        var events = !{JSON.stringify(events)};
        var filter = document.getElementById('filter');
        //var eventSpace = document.getElementById('eventSpace');

        function loadTags(events) {

            let tags = [];
            var showAll = document.createElement('input');
            showAll.type = 'button';
            showAll.value = 'Show All';
            showAll.onclick = function(){
                filterOut('show all');
            }
            filter.appendChild(showAll);

            for (let i = 0; i < events.length; i++) {
                for (let j = 0; j < events[i].tags.length; j++) {
                    if (!tags.includes(events[i].tags[j])) {
                        tags.push(events[i].tags[j]);
                        var btn = document.createElement('input');
                        btn.type = 'button';
                        btn.name = 'tagFilter';
                        btn.value = events[i].tags[j];
                        btn.onclick = function(){
                            filterOut(btn.value);
                        }
                        filter.appendChild(btn);
                    }
                }
            }
            return tags;
        }

        if(events.length > 0) {
            loadTags(events);
        }

        function filterOut(tag) {
            var displayedEvents = document.getElementsByClassName('filtered');
            for(let i = 0; i < displayedEvents.length; i++){
                if(displayedEvents[i].outerHTML.includes(tag) || tag === 'show all'){
                    displayedEvents[i].style.display = 'block';
                } else {
                    displayedEvents[i].style.display = 'none';
                }
            }
        }

        function addTag() {
          
            var input, filter, tagDiv;
            input = document.getElementById('input');
            filter = input.value.toUpperCase();
          
            tagDiv = document.getElementsByName('tagFilter');
            tagDiv.forEach(function(element) {
                if(element.value.toUpperCase().indexOf(filter) > -1 && filter.length > 0 || filter.length === 0){
                    element.style.visibility = 'visible';
                } else {
                    element.style.visibility = 'hidden';
                }
            });
        }